<?xml version="1.0" encoding="us-ascii"?>
<!-- exmalserver GetStateMachine -->
<scxml xmlns="http://www.w3.org/2005/07/scxml" xmlns:customActionDomain="http://my.custom-actions.domain/CUSTOM"
       version="1.0"
       initial="On">

  <state id="On">
    <initial>
      <transition target="NotOperational"/>
    </initial>
       
    <state id="NotOperational">
      <initial>
        <transition target="NotReady"/>
      </initial>
  
      <state id="NotReady">
        <transition event="Events.Init" target="Initialising"/>
        <transition event="Events.Reset">
           <customActionDomain:ActionsStd.Reset name="ActionsStd.Reset"/>
        </transition>
        <transition event="Events.InitError" target="NotReady">
           <customActionDomain:ActionsInit.Error name="ActionsInit.Error"/>
        </transition>
      </state>

      <state id="Initialising">
        <onentry>
            <customActionDomain:ActionsInit.Start name="ActionsInit.Start"/>
        </onentry>
        <invoke id="ActivityInitialising"/>
        <transition event="Events.Init">
            <customActionDomain:ActionsStd.Init name="ActionsStd.Init"/>
        </transition>
        <transition event="Events.InitDone" target="Ready">
            <customActionDomain:ActionsInit.Done name="ActionsInit.Done"/>
        </transition>
        <transition event="Events.InitError" target="NotReady">
            <customActionDomain:ActionsInit.Error name="ActionsInit.Error"/>
        </transition>
        <transition event="Events.InitTimeout" target="NotReady">
            <customActionDomain:ActionsInit.Timeout name="ActionsInit.Timeout"/>
        </transition>
        <transition event="Events.Stop" target="NotReady">
           <customActionDomain:ActionsInit.Stop name="ActionsInit.Stop"/>
        </transition>
        <transition event="Events.Reset" target="NotReady">
           <customActionDomain:ActionReset name="ActionReset"/>
        </transition>
      </state>

      <state id="Ready">   
         <transition event="Events.Enable" target="Enabling"/>
         <transition event="Events.Reset" target="NotReady">
           <customActionDomain:ActionsStd.Reset name="ActionsStd.Reset"/>
         </transition>

         <transition event="Events.Init">
             <customActionDomain:ActionsStd.Init name="ActionsStd.Init"/>
         </transition>
         <transition event="Events.Disable">
             <customActionDomain:ActionsStd.Disable name="ActionsStd.Disable"/>
         </transition>
         <transition event="Events.EnableError" target="Ready">
              <customActionDomain:ActionsEnable.Error name="ActionsEnable.Error"/>
         </transition>
      </state>

      <state id="Enabling">
        <onentry>
            <customActionDomain:ActionsEnable.Start name="ActionsEnable.Start"/>
        </onentry>
      <invoke id="ActivityEnabling"/>
        <transition event="Events.Enable">
          <customActionDomain:ActionsStd.Enable name="ActionsStd.Enable"/>
        </transition>
        <transition event="Events.EnableDone" target="Operational">
            <customActionDomain:ActionsEnable.Done name="ActionsEnable.Done"/>
        </transition>
        <transition event="Events.EnableError" target="Ready">
          <customActionDomain:ActionsEnable.Error name="ActionsEnable.Error"/>
        </transition>
        <transition event="Events.EnableTimeout" target="Ready">
          <customActionDomain:ActionsEnable.Timeout name="ActionsEnable.Timeout"/>
        </transition>
        <transition event="Events.Stop" target="Ready">
           <customActionDomain:ActionsEnable.Stop name="ActionsEnable.Stop"/>
        </transition>
        <transition event="Events.Reset" target="NotReady">
            <customActionDomain:ActionReset name="ActionReset"/>
        </transition>
       </state>

    </state>

    <state id="Operational">
      <initial>
        <transition target="Idle"/>
      </initial>

      <transition event="Events.Disable" target="Disabling"/>




    <state id="Disabling">
        <onentry>
          <customActionDomain:ActionsDisable.Start name="ActionsDisable.Start"/>
        </onentry>
    <invoke id="ActivityDisabling"/>
         <transition event="Events.Disable">
             <customActionDomain:ActionsStd.Disable name="ActionsStd.Disable"/>
         </transition>
         <transition event="Events.DisableDone" target="Ready">
             <customActionDomain:ActionsDisable.Done name="ActionsDisable.Done"/>
          </transition>
          <transition event="Events.DisableError" target="Ready">
            <customActionDomain:ActionsDisable.Error name="ActionsDisable.Error"/>
          </transition>
          <transition event="Events.DisableTimeout" target="Ready">
            <customActionDomain:ActionsDisable.Timeout name="ActionsDisable.Timeout"/>
          </transition>
          <transition event="Events.Stop" target="Operational">
             <customActionDomain:ActionsDisable.Stop name="ActionsDisable.Stop"/>
          </transition>
          <transition event="Events.Reset" target="NotReady">
              <customActionDomain:ActionReset name="ActionReset"/>
          </transition>
     </state>

      <state id="Idle">
          <transition event="Events.Enable">
              <customActionDomain:ActionsStd.Enable name="ActionsStd.Enable"/>
          </transition>
          <transition event="Events.Setup" target="SettingUp"/>
          <transition event="Events.SetupError"/>
          <transition event="Events.SetupDone"/>
      </state>


    <state id="SettingUp">
       <onentry>
         <customActionDomain:ActionsSetup.Start name="ActionsSetup.Start"/>
       </onentry>

    <invoke id="ActivitySettingUp"/>
     <transition event="Events.Setup">
         <customActionDomain:ActionsSetup.Start name="ActionsSetup.Start"/>
     </transition>
     <transition event="Events.SetupDone" target="Idle">
         <customActionDomain:ActionsSetup.Done name="ActionsSetup.Done"/>
      </transition>
      <transition event="Events.SetupError" target="Error">
        <customActionDomain:ActionsSetup.Error name="ActionsSetup.Error"/>
      </transition>
      <transition event="Events.SetupTimeout" target="Error">
        <customActionDomain:ActionsSetup.Timeout name="ActionsSetup.Timeout"/>
      </transition>
      <transition event="Events.Stop" target="Idle">
         <customActionDomain:ActionsSetup.Stop name="ActionsSetup.Stop"/>
      </transition>
      <transition event="Events.Reset" target="NotReady">
          <customActionDomain:ActionReset name="ActionReset"/>
      </transition>
    </state>

    <state id="Error">
        <transition event="Events.Reset" target="NotReady">
            <customActionDomain:ActionsStd.Reset name="ActionsStd.Reset"/>
        </transition>

        <transition event="Events.Stop">
            <customActionDomain:ActionsSetup.Stop name="ActionsSetup.Stop"/>
        </transition>

    </state>

    </state>
    
    <transition event="Events.GetState">
      <customActionDomain:ActionsStd.GetState name="ActionsStd.GetState"/>
    </transition>

    <transition event="Events.GetStatus">
      <customActionDomain:ActionsStd.GetStatus name="ActionsStd.GetStatus"/>
    </transition>

    <transition event="Events.GetVersion">
        <customActionDomain:ActionsStd.GetVersion name="ActionsStd.GetVersion"/>
    </transition>

    <transition event="Events.CmdStatus">
        <customActionDomain:ActionsStd.CmdStatus name="ActionsStd.CmdStatus"/>
    </transition>

    <transition event="Events.CmdConfig">
        <customActionDomain:ActionsStd.CmdConfig name="ActionsStd.CmdConfig"/>
    </transition>

    <transition event="Events.SetLogLevel">
      <customActionDomain:ActionsStd.SetLogLevel name="ActionsStd.SetLogLevel"/>
    </transition>
    
    <transition event="Events.Exit">
      <customActionDomain:ActionsStd.Exit name="ActionsStd.Exit"/>
    </transition>
 
    <transition event="Events.CtrlC">
      <customActionDomain:ActionsStd.ExitNoReply name="ActionsStd.ExitNoReply"/>
    </transition>
    
    <transition event="Events.Reset" target="NotReady">
      <customActionDomain:ActionsStd.Reset name="ActionsStd.Reset"/>
    </transition>
        
    <transition event="Events.Stop">
      <customActionDomain:ActionsStd.Stop name="ActionsStd.Stop"/>
    </transition>
    <transition event="Events.Config">
      <customActionDomain:ActionsStd.Config name="ActionsStd.Config"/>
    </transition>

    <transition event="Events.GetConfig">
      <customActionDomain:ActionsStd.GetConfig name="ActionsStd.GetConfig"/>
    </transition>

  </state>
 
</scxml>
